version: '3.8'

services:

  Yii2Oauth2Server:
    build:
      context: ..
      dockerfile: docker/Yii2Oauth2Server/Dockerfile
    image: "rhertogh/yii2-oauth2-server"
    networks:
      - test
    depends_on:
      - MySql_5_7
    ports:
      - '${DOCKER_HOST_HTTP_PORT:-88}:80' # http port mapping, it's recommended to use a different port than the default sample app.
    volumes:
      # Re-use local composer cache via host-volume
      - ~/.composer-docker/cache:/root/.composer/cache:delegated
      # Mount source-code for development
      - ..:/app
    environment:
      # PHP & Xdebug
      - PHP_IDE_CONFIG=${PHP_IDE_CONFIG:-serverName=Yii2Oauth2Server}
      - PHP_ENABLE_XDEBUG=${PHP_ENABLE_XDEBUG:-1}
      - XDEBUG_MODE=${XDEBUG_MODE}
      - XDEBUG_CONFIG=${XDEBUG_CONFIG}
      # Oauth2 Server
      - YII2_OAUTH2_SERVER_PRIVATE_KEY_PASSPHRASE=${YII2_OAUTH2_SERVER_PRIVATE_KEY_PASSPHRASE:?err}
      - YII2_OAUTH2_SERVER_CODES_ENCRYPTION_KEY=${YII2_OAUTH2_SERVER_CODES_ENCRYPTION_KEY:?err}
      - YII2_OAUTH2_SERVER_STORAGE_ENCRYPTION_KEYS=${YII2_OAUTH2_SERVER_STORAGE_ENCRYPTION_KEYS:?err}
      # Database
      - MYSQL_HOST=${MYSQL_HOST:?err}
      - MYSQL_DB_NAME=${MYSQL_DB_NAME:?err}
      - MYSQL_USER_NAME=${MYSQL_USER_NAME:?err}
      - MYSQL_USER_PASSWORD=${MYSQL_USER_PASSWORD:?err}
    extra_hosts:
      - host.docker.internal:host-gateway

  MySql_5_7:
    image: "mysql:5.7"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:?err}
      - MYSQL_ROOT_HOST=%
      - MYSQL_DATABASE=${MYSQL_DB_NAME:?err}
      - MYSQL_USER=${MYSQL_USER_NAME:?err}
      - MYSQL_PASSWORD=${MYSQL_USER_PASSWORD:?err}
    networks:
      - test
    ports:
      - "${DOCKER_HOST_MYSQL_PORT:-3307}:3306" # mysql port mapping, it's recommended to use a different port than the default sample app.

networks:
  test:
    driver: bridge
    name: test
